
name: Docker Build, Push to Docker Hub and deploy
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get current branch name
      id: get_branch_name
      run: echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build & Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64 
        tags: aph1d/craft-bike:${{ steps.get_branch_name.outputs.branch_name }}.${{ github.sha }}, aph1d/craft-bike:latest

    # - name: Create Sentry release
    #   uses: getsentry/action-release@v1
    #   env:
    #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    #     SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
    #     SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
    #   with:
    #     environment: production

  deploy_docker_container_using_ansible:
    runs-on: ubuntu-latest
    needs: [ 'build_and_push_to_docker_hub' ]
    steps: 
      - uses: actions/checkout@v4
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: deployment.yml
          # Optional, directory where playbooks live
          directory: ./ansible
          # Optional, SSH private key
          key: ${{secrets.SSH_KEY}}
          # Optional, additional flags to pass to ansible-playbook
          options: |
            --inventory inventory.yml
            --extra-vars "docker_user=${{ secrets.DOCKERHUB_USERNAME }} docker_password=${{ secrets.DOCKERHUB_TOKEN }} AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }} MYSQL_HOST=${{ secrets.MYSQL_HOST }} MYSQL_PORT=${{ secrets.MYSQL_PORT }} MYSQL_DB_NAME=${{ secrets.MYSQL_DB_NAME }} MYSQL_USER=${{ secrets.MYSQL_USER }} MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} SECRET_KEY=${{ secrets.SECRET_KEY }} SENTRY_SDK_DSN=${{ secrets.SENTRY_SDK_DSN }} GITHUB_SHA=${{ github.sha }}"
            --user ${{secrets.ANSIBLE_DEPLOY_USER}}
            --verbose
            --timeout 1800
